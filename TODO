2022-10-13 23:30:40,843 INFO -- net liquid is 1839.4118128199998 :: get_target_cost@inventory.py:77
2022-10-13 23:30:40,844 INFO -- max risk is 1839.4118128199998 :: get_target_cost@inventory.py:80
2022-10-13 23:30:40,844 INFO -- available cash is -827.40351782 :: get_target_cost@inventory.py:84
2022-10-13 23:30:40,845 INFO -- target cost is -827.40351782 :: get_target_cost@inventory.py:87

On top of that, you must be sure, that you will have all the different modules in place: price aggregators (to make sure you have all price sources aggregated in one place), order management systems (OMS), execution management systems (EMS), smart order routing (SOR), liquidity manager (LM), risk management systems (RMS). and any interface you may need (to databases, storage, monitoring systems, reporting, etc)



Additionally, the following stricter normalization practice is common and can help, although it isn’t always necessary (for example, we didn’t do this in the digit-classification example):

Normalize each feature independently to have a mean of 0.
Normalize each feature independently to have a standard deviation of 1.
This is easy to do with NumPy arrays:

x -= x.mean(axis=0)
x /= x.std(axis=0)


6) Reserve enough API calls from the API rate limit to burst cancel all open orders at all times.
