---
batch_size: 32
embedding_dim: 32
epochs: 3
learning_rate: 0.001
max_features: 10000
min_delta: 0.01
patience: 100
sequence_length: 280
test_size: 0.1
model: >
    loss = tensorflow.keras.losses.BinaryCrossentropy(from_logits=True),
    optimizer = tensorflow.keras.optimizers.Adam(learning_rate=modelcfg["learning_rate"]),
    metrics = tensorflow.metrics.BinaryAccuracy("accuracy", threshold=0.0)
    model = tensorflow.keras.Sequential([
        tensorflow.keras.layers.Embedding(max_features + 1, embedding_dim),
        tensorflow.keras.layers.GlobalAveragePooling1D(),
        tensorflow.keras.layers.Dropout(0.2),
        tensorflow.keras.layers.Dense(16, activation="relu"),
        tensorflow.keras.layers.Dense(1)
    ])
