---
name: "i20220803"
class: "intensity"
training_file: "20220803.tsv"
bert: "yiyanghkust/finbert-pretrain"
num_labels: 2
test_size: 0.178
max_length: 156
batch_size: 32
epochs: 33
learning_rate: 0.000000666
min_delta: 0.01
patience: 3
monitor: "val_loss"
rmk: >
    input_ids = tensorflow.keras.layers.Input(shape=(model_config.yaml["max_length"],), name='input_ids', dtype='int32')
    mask = tensorflow.keras.layers.Input(shape=(model_config.yaml["max_length"],), name='attention_mask', dtype='int32')
    embeddings = bert(input_ids, attention_mask=mask)[0]
    X = tensorflow.keras.layers.GlobalMaxPool1D()(embeddings)
    X = tensorflow.keras.layers.BatchNormalization()(X)
    X = tensorflow.keras.layers.Dense(156, activation='relu')(X)
    X = tensorflow.keras.layers.Dropout(0.2)(X)
    y = tensorflow.keras.layers.Dense(model_config.yaml["num_labels"], activation='softmax', name='outputs')(X)
    model = tensorflow.keras.Model(inputs=[input_ids, mask], outputs=y)
    model.layers[2].trainable = False
    loss = tensorflow.keras.losses.SparseCategoricalCrossentropy()
    metrics = tensorflow.keras.metrics.SparseCategoricalAccuracy("accuracy")
    optimizer = tensorflow.keras.optimizers.Adam(learning_rate=model_config.yaml["learning_rate"])
