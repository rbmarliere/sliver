---
training_file: "20220720_p2.tsv"
batch_size: 32
embedding_dim: 512
epochs: 50
learning_rate: 0.001
max_features: 10000
min_delta: 0.01
patience: 100
sequence_length: 280
test_size: 0.1
model: >
    loss=tensorflow.keras.losses.SquaredHinge(),
    optimizer = tensorflow.keras.optimizers.Adam(learning_rate=modelcfg["learning_rate"]),
    model = tensorflow.keras.Sequential([
        tensorflow.keras.layers.Embedding(max_features + 1, embedding_dim, mask_zero=True),
        tensorflow.keras.layers.Bidirectional(tensorflow.keras.layers.LSTM(64, return_sequences=True)),
        tensorflow.keras.layers.Bidirectional(tensorflow.keras.layers.LSTM(32)),
        tensorflow.keras.layers.Dense(64, activation="tanh"),
        tensorflow.keras.layers.Dropout(0.5),
        tensorflow.keras.layers.Dense(1)
    ])
    export_model = tensorflow.keras.Sequential([
        vectorize_layer,
        model,
        tensorflow.keras.layers.Activation("tanh")
    ])
    export_model.compile(
        loss=tensorflow.keras.losses.MeanSquaredError(),
        optimizer=tensorflow.keras.optimizers.Adam(),
    )
