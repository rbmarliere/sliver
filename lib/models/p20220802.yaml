---
name: "p20220802"
class: "polarity"
training_file: "20220729.tsv"
bert: "yiyanghkust/finbert-tone"
num_labels: 3
test_size: 0.112
max_length: 128
batch_size: 16
epochs: 9
learning_rate: 0.000112
min_delta: 0.0418
patience: 2
monitor: "loss"
rmk: >
    input_ids = tensorflow.keras.layers.Input(shape=(model_config.yaml["max_length"],), name='input_ids', dtype='int32')
    mask = tensorflow.keras.layers.Input(shape=(model_config.yaml["max_length"],), name='attention_mask', dtype='int32')
    embeddings = bert(input_ids, attention_mask=mask)[0]
    X = tensorflow.keras.layers.GlobalMaxPool1D()(embeddings)
    X = tensorflow.keras.layers.BatchNormalization()(X)
    X = tensorflow.keras.layers.Dense(128, activation='relu')(X)
    X = tensorflow.keras.layers.Dropout(0.1)(X)
    y = tensorflow.keras.layers.Dense(model_config.yaml["num_labels"], activation='softmax', name='outputs')(X)
    model = tensorflow.keras.Model(inputs=[input_ids, mask], outputs=y)
    model.layers[2].trainable = False
    loss = tensorflow.keras.losses.SparseCategoricalCrossentropy()
    metrics = tensorflow.keras.metrics.SparseCategoricalAccuracy("accuracy")
    optimizer = tensorflow.keras.optimizers.Adam(learning_rate=model_config.yaml["learning_rate"])

